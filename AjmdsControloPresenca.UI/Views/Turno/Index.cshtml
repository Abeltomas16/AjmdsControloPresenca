@model PagedList.IPagedList<TurnoIndexVM>

@{
    ViewBag.Title = "Turno";
}

<div class="row">
    <div class="col-12">
        <div class="box shadow p-4">
            <div class=" row d-flex justify-content-start px-0 box-header with-border">
                <div class="col-6 text-start">
                    <h3 class="page-title">@ViewBag.Title</h3>
                </div>
                <div class="col-6 text-end">
                    <div class="btn-group">
                        <a href="@Url.Action("Add")" class="waves-light btn btn-warning"><i class="fa fa-plus"></i> Novo</a>
                        <a href="@Url.Action("Index","TurnoFunc")" class="btn btn-dark waves-light">Associar</a>
                    </div>

                </div>

            </div>
            <!-- /.box-header -->
            <div class="box-body no-padding">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr class="bg-primary">
                                <th scope="col">#</th>
                                <th scope="col">Nome</th>
                                <th scope="col">Entrada</th>
                                <th scope="col">Saida</th>
                                <th scope="col">Tolerância(M)</th>
                                <th scope="col">Estado</th>
                                <th>Acções</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (TurnoIndexVM turno in Model)
                            {
                                <tr id="turno-@turno.Id">
                                    <th scope="row">@turno.Id</th>
                                    <td style="width:100%;">@turno.Descricao</td>
                                    <td><span class="text-muted text-nowrap">@turno.Entrada</span></td>
                                    <td><span class="text-muted text-nowrap">@turno.Saida</span></td>
                                    <td><span class="text-muted">@turno.TurnoToleranciaAtraso</span></td>
                                    <td><span class="badge badge-pill badge-success-light">@turno.Estado</span></td>

                                    <td class="btn-group">
                                        <a class="btn btn-sm btn-outline-success"
                                           href="@Url.Action("Edit",new {id=turno.Id})"><i class="fas fa-edit"></i> Editar</a>
                                        <button class="btn btn-sm btn-outline-danger" onclick="showModal(@turno.Id,'@turno.Descricao')"><i class="fas fa-trash"></i> Excluir</button>
                                    </td>
                                </tr>
                                }
                                <tr class="bg-transparent">
                                    <td colspan="2"><b>@Model.Count registros de @Model.TotalItemCount</b></td>
                                </tr>
                            </tbody>
                    </table>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->

    </div>
</div>
<!-- /.row -->

<!-- -->
@{
    if (Model.TotalItemCount != Model.Count)
    {
        <div class="row">
            <div class="col-md-12">
                Página @(Model.PageCount<Model.PageNumber? 0 : Model.PageNumber) de @Model.PageCount

                @if (Model.HasPreviousPage)
                {
                    @Html.ActionLink("<<", "Index", new { pagina = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                    @Html.Raw(" ");
                    @Html.ActionLink("< Anterior", "Index", new { pagina = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                }
                else
                {
                    @:<<
                    @Html.Raw(" ");
                    @:< Anterior
                }

                @if (Model.HasNextPage)
                {
                    @Html.ActionLink("Próxima >", "Index", new { pagina = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                    @Html.Raw(" ");
                    @Html.ActionLink(">>", "Index", new { pagina = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                }
                else
                {
                    @:Próxima >
                    @Html.Raw(" ")
                    @:>>
                }
            </div>
        </div>
    }
}
<div>
    <div data-id="0" class="modal" id="deleteModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Excluir Turno</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Desejas excluir o turno <span id="lblNomeFuncionario"></span></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" id="btnConfirmar">Confirmar</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section script{

    <script src="~/Scripts/toastr.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/bootstrap.validate.js"></script>
}
<script>
    function showModal(Id, Nome) {
        $('#lblNomeFuncionario').text(Nome)
        $('#deleteModal').data('id', Id).modal('show')
    }
    document.querySelector('#btnConfirmar').addEventListener('click', async () => {
        const id = $('#deleteModal').data('id')
        var link = `/Turno/Delete/${id}`
        var promisse = await fetch(link)
        if (promisse.status == 200) {
            document.querySelector('#turno-' + id).remove()
            toastr.success('Turno Excluido com sucesso', 'ALAYPonto')
        } else {
            toastr.error('Falha ao exluir turno', 'ALAYPonto')
        }
        $('#deleteModal').data('id', '0').modal('hide')
    })

</script>
