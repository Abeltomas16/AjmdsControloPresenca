@model UsuarioAddEditVM

@{
    ViewBag.Title = "Cadastrar Usuário";
}

<div class="p-4">

    <h2 class="mb-5 text-muted">@ViewBag.Title</h2>

    <form class="my-4 text-center text-muted p-0 col-md-6" id="frmPesquisar">
        <div class="input-group">
            <input type="text" name="bilhete" class="form-control" placeholder="Número do bilhete do funcionário" aria-describedby="inputGroupPrepend1" required>
            <div class="input-group-append">
                <span class="input-group-text" id="inputGroupPrepend1"><i class="fas fa-search"></i></span>
            </div>
        </div>
    </form>

    <div id="content">
        <form class="my-4 text-muted p-0 d-none" id="frmAdd" method="post">

            <div class="form-group">
                @Html.HiddenFor(n => n.FuncionarioId)
                <small>  @Html.ValidationMessageFor(n => n.FuncionarioId, null, new { @class = "text-danger" })</small>
            </div>

            <div class="form-group p-0 col-md-6">
                @Html.LabelFor(n => n.NomeFuncionario, "Funcionário:")
                @Html.TextBoxFor(n => n.NomeFuncionario, new { @class = "form-control", @readonly = "" })
                <small>  @Html.ValidationMessageFor(n => n.NomeFuncionario, null, new { @class = "text-danger" })</small>
            </div>

            <div class="form-group p-0 col-md-6">
                @Html.LabelFor(n => n.Nome, "Nome Login:")
                @Html.TextBoxFor(n => n.Nome, new { @class = "form-control", @readonly = "" })
                <small>  @Html.ValidationMessageFor(n => n.Nome, null, new { @class = "text-danger" })</small>
            </div>

            <div class="form-group p-0 col-md-6">
                @Html.LabelFor(n => n.Password, "Senha:")
                @Html.PasswordFor(n => n.Password, new { @class = "form-control", @focus = "" })
                <small>  @Html.ValidationMessageFor(n => n.Password, null, new { @class = "text-danger" })</small>
            </div>
            <div class="form-group p-0 col-md-6">
                @Html.LabelFor(n => n.ConfirmPassword, "Confirmar senha:")
                @Html.PasswordFor(n => n.ConfirmPassword, new { @class = "form-control" })
                <small>  @Html.ValidationMessageFor(n => n.ConfirmPassword, null, new { @class = "text-danger" })</small>
            </div>

            <div class="form-group">
                <input type="submit" class="btn btn-primary" value="Salvar" />
                <a href="@Url.Action("Index")" class="btn btn-outline-info">Cancelar</a>
            </div>

        </form>
    </div>

    </div>

    @section script{
        <script src="~/Scripts/toastr.min.js"></script>
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
        <script src="~/Scripts/bootstrap.validate.js"></script>

        <script>
            const form = document.querySelector('#frmPesquisar')
            const frmAdd = document.querySelector('#frmAdd')
            form.addEventListener('submit', e => {
                e.preventDefault()
                frmAdd.reset();
                const bilhete = form.bilhete.value.trim()
                getUsuario(bilhete, form)
            })
            async function getUsuario(Bilhete, frm) {
                const query = `/Usuario/Search/${Bilhete}`
                const promisse = await fetch(query)

                if (promisse.status == 409) {
                    frmAdd.classList.add('d-none')
                    toastr.error('Funcionário Já tem um registro');
                    return;
                } else if (promisse.status == 404) {
                    frmAdd.classList.add('d-none')
                    toastr.error('Funcionário não encontrado');
                    return;
                } else {
                    const dados = await promisse.json()
                    frmAdd.classList.remove('d-none')
                    document.querySelector('#FuncionarioId').value = dados.FuncionarioId
                    document.querySelector('#NomeFuncionario').value = dados.NomeFuncionario
                    document.querySelector('#Nome').value = dados.Bilhete
                }
                frm.reset()
            }
        </script>
    }
